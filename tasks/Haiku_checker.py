"""
Перед вами трёхстишия, которые претендуют на то, чтобы быть хайку.
В качестве разделителя строк используются символы / .
Если разделители делят текст на строки, в которых 5/7/5 слогов, то выведите «Хайку!».
Если число строк не равно 3, то выведите строку «Не хайку. Должно быть 3 строки.»
Иначе выведите строку вида «Не хайку. В i строке слогов не s, а j.», где строка i — самая ранняя,
в которой количество слогов неправильное.
Для простоты будем считать, что слогов ровно столько же, сколько гласных, не задумываясь о тонкостях.
"""

import re
l = ['Вечер за окном. / Еще один день прожит. / Жизнь скоротечна...',
    'Просто текст',
    'Как вишня расцвела! / Она с коня согнала / И князя-гордеца.',
    'На голой ветке / Ворон сидит одиноко… / Осенний вечер!',
    'Тихо, тихо ползи, / Улитка, по склону Фудзи, / Вверх, до самых высот!',
    'Жизнь скоротечна… / Думает ли об этом / Маленький мальчик.']

def haiku(a):
    a = a.split('/')
    if len(a) != 3:
        return 'Не хайку. Должно быть 3 строки.'
    else:
        cnt = 1
        for line in a:
            if cnt in (1, 3):
                if not re.search(r'^(?:[^уеаоэяиюы]*[уеаоэяиюы]+[^уеаоэяиюы]*){5}$', line, flags=re.IGNORECASE):
                    return 'Не хайку. В строке {} слогов не 5, а {}'.format(cnt, sum(line.count(i) for i in list('уеаоэяиюы')))
            elif cnt == 2:
                if not re.search(r'^(?:[^уеаоэяиюы]*[уеаоэяиюы]+[^уеаоэяиюы]*){7}$', line, flags=re.IGNORECASE):
                    return 'Не хайку. В строке {} слогов не 7, а {}'.format(cnt, sum(line.count(i) for i in list('уеаоэяиюы')))
            cnt += 1
    return 'Это хайку!'

for text in l:
    print(haiku(text))